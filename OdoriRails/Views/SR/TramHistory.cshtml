@using OdoriRails.Helpers.Objects
@model OdoriRails.Models.SRManagement.TramHistoryModel
@{
    ViewBag.Title = "TramHistory";
}


<h4>Tram Nummer:</h4>


@Html.TextBoxFor(x => x.TramId, new {@class = "form-control", id = "tramId"})
<button class="btn form-control btn-default" onclick="location.href = `/SR/TramHistory/${$('#tramId').val()}`;">Refresh</button>


<h2>Tram History</h2>

<h4>Reparaties</h4>

<table class="table table-striped">
    <thead>
    <tr>
        <th>Id</th>
        <th>Type</th>
        <th>Begin Date</th>
        <th>End date</th>
        <th>Engineers</th>
        <th>Defect</th>
        <th>Solution</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var reparatie in Model.Repairs)
    {
        <tr>
            <td>
                @reparatie.Id
            </td>
            <td>
                @switch (reparatie.Type)
                {
                    case RepairType.Maintenance:
                        @Html.Raw("Maintenance")
                        break;
                    case RepairType.Repair:
                        @Html.Raw("Repair")
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            </td>
            <td>
                @reparatie.StartDate.ToShortDateString()
            </td>
            <td>
                @Html.Raw(reparatie.EndDate?.ToShortDateString() ?? "Nog niet beindigd.")
            </td>
            <td>
                @string.Join(", ", reparatie.AssignedUsers.Select(x => x.Name)).
            </td>
            <td>
                @reparatie.Defect
            </td>
            <td>
                @reparatie.Solution
            </td>
        </tr>
    }
    </tbody>
</table>

<h4>Schoonmaken</h4>

<table class="table table-striped">
    <thead>
    <tr>
        <th>Id</th>
        <th>Size</th>
        <th>Begin Date</th>
        <th>End Date</th>
        <th>Cleaners</th>
        <th>Details</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var schoonmaak in Model.Cleans)
    {
        <tr>
            <td>
                @schoonmaak.Id
            </td>
            <td>
                @switch (schoonmaak.Size)
                {
                    case CleaningSize.Big:
                        @Html.Raw("Big")
                        break;
                    case CleaningSize.Small:
                        @Html.Raw("Small")
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            </td>
            <td>
                @schoonmaak.StartDate.ToShortDateString()
            </td>
            <td>
                @Html.Raw(schoonmaak.EndDate?.ToShortDateString() ?? "Nog niet beindigd.")
            </td>
            <td>
                @string.Join(", ", schoonmaak.AssignedUsers.Select(x => x.Name)).
            </td>
            <td>
                @schoonmaak.Comments
            </td>
        </tr>
    }
    </tbody>
</table>